
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp EQUAL     &kp N1  &kp N2    &kp N3     &kp N4  &kp N5                         &tog 1                                                                                                   &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0        &kp MINUS
     &kp ESCAPE      &kp Q   &kp W     &kp E      &kp R   &kp T             &sk LG(LEFT_SHIFT)                                                                                     &sk RG(RIGHT_SHIFT)   &kp Y   &kp U      &kp I     &kp O     &kp P         &kp BSLH
        &kp TAB      &kp A   &kp S     &kp D      &kp F   &kp G             &sk LC(LEFT_SHIFT)  &sk LEFT_GUI   &sk LEFT_ALT   &none   &none          &sk RIGHT_ALT  &sk RIGHT_GUI  &sk RC(RIGHT_SHIFT)   &kp H   &kp J      &kp K     &kp L  &kp SEMI          &kp SQT
 &sk LEFT_SHIFT      &kp Z   &kp X     &kp C      &kp V   &kp B                          &none         &none  &kp LC(LS(J))   &none   &none  &kp LC(LS(SEMICOLON))          &none                &none   &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &sk RIGHT_SHIFT
          &mo 2  &kp GRAVE  &tog 1  &kp LEFT  &kp RIGHT                    &mt LCTRL BACKSPACE       &kp DEL          &none                                  &none      &kp ENTER      &mt RCTRL SPACE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT            &mo 2
            >;
        };

        layer_keypad {
            bindings = <
  &none          &none      &none      &none      &none   &none            &trans                                                   &mo 3   &none       &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &none
 &trans          &none      &none      &none      &none   &none            &trans                                                  &trans   &none        &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &none
 &trans  &kp LG(LS(Z))  &kp LG(Z)  &kp LG(V)  &kp LG(C)   &none            &trans  &trans  &trans   &none   &none  &trans  &trans  &trans   &none        &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS   &none
 &trans          &none      &none      &none      &none   &none             &none   &none  &trans   &none   &none  &trans   &none   &none   &none        &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &trans
  &mo 2          &none     &trans      &none      &none                    &trans  &trans  &trans                  &trans  &trans  &trans          &kp KP_NUMBER_0         &none     &kp KP_DOT            &none   &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &trans   &kp F1   &kp F2  &kp F3  &kp F4  &kp F5            &tog 1                                                   &mo 3  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
 &trans  &kp F11  &kp F12  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans   &trans  &trans
 &trans   &trans   &trans  &trans  &trans  &trans            &trans  &trans  &trans   &none   &none  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans  &trans
 &trans   &trans   &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans  &trans   &trans  &trans
 &trans   &trans   &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
